---
title: "Actividad 2: Data Wrangling y Data Visualization de películas"
format: 
  html:
    code-fold: true
execute:
  warning: false
author: Gonzalo Ruiz @ gonzaaruizz22@gmail.com
---

## Objetivo

Explorar, transformar y visualizar datos del dataset `movies` usando funciones del tidyverse

## Instrucciones

1.  Cargar el paquete ggplot2movies y el dataset movies
2.  Usá funciones como filter(), mutate(), transmute(), slice(), across(), select() y join() para responder las siguientes preguntas

```{r}
#| label: librerias

library(tidyverse)
library(ggplot2movies)

```

```{r}
#| label: dataset
data(movies)
```

## Descripción de variables

Éste dataset contiene información sobre más de 50.000 películas disponibles en iMDb. A continuación se listan las variables principales:

![](images/clipboard-127413764.png)

## Parte 1 - Exploración inicial

1.  ¿Cuántas películas hay en total?

Existen `{r} movies |> nrow()` películas en total.

2.  ¿Cuáles son los años de estreno más frecuentes?

Los años de estreno con más apariciones son:

```{r}
#| label: pregunta2
movies |>
  group_by(year) |>
  summarise(apariciones = n()) |>
  arrange(desc(apariciones))
```

3.  Hacé un histograma del rating(`rating`). ¿Qué podes decir de la distribución?

```{r}
#| label: pregunta3
movies |>
  ggplot(aes(x=rating)) +
  geom_histogram(bins=movies |> nrow() |> sqrt() |> round(), color="steelblue4") +
  labs(
    title="Histograma de los ratings de las películas en iMDb",
    subtitle=sprintf("Bins: %s", movies |> nrow() |> sqrt() |> round()),
    x="Rating",
    y="Cantidad de apariciones"
  ) +
  geom_vline(aes(xintercept=mean(rating)), color="red") +
  geom_vline(aes(xintercept=median(rating)), color="green")
```

Es una distribución asimétrica negativa (con cola hacia la izquierda) con [media]{style="color:red;"} `{r} movies |> pull(rating) |> mean()` y [mediana]{style="color:green;"} `{r} movies |> pull(rating) |> median()`. Toma el rango desde `{r} min(movies |> pull(rating) |> min())` `{r} min(movies |> pull(rating) |> max())` y se desvía en `{r} sd(movies$rating)` con respecto a la media.

4.  Mostrá los títulos de las 10 películas con más votos (`votes`) usando `slice_max()`

```{r}
#| label: pregunta4
movies |>
  slice_max(order_by=votes, n=10, na_rm=T) |>
  select(title, rating) |>
  arrange(desc(rating))
```

## Parte 2 - Trasnformación y análisis

5.  Usá `transmute()` para crear un nuevo data frame con:

    - título
    - año
    - duración en horas (longitud / 60)
    - voto en millones (votes / 1e6)
    
```{r}
#| label: pregunta5
movies_transmuted <- movies |>
  transmute(
    title,
    year,
    duration = (length / 60) |> round(3),
    votes_M = votes / 1e6
  )
movies_transmuted
```
6. Filtrar películas posteriores al 2000 con más de 10.000 votos y hacé un diagrama de dispersión (scatterplot) de duración vs rating

```{r}
#| label: pregunta6
movies |>
  filter(year >= 2000 & votes > 10e4) |>
  ggplot(aes(x=length, y=rating)) +
    geom_point(color="steelblue4") +
    labs(
      title="Relación entre duración vs rating de las películas",
      subtitle="Peliculas con más de 10.000 votos y posteriores al 2000",
      x="Duración (en minutos)",
      y="Rating"
    )
```

7. Agregar una columna que indique la década (`decada`) y calcular el rating promedio por década

```{r}
#| label: pregunta7

movies |>
  mutate(decada = round(year - year %% 10)) |>
  group_by(decada) |>
  summarise(promedio = rating |> mean() |> round(3))
```
8. Usar `slice_sample()` para tomar una muestra aleatoria de 20 películas estrenadas después del 2010

```{r}
#| label: pregunta8
movies |>
  filter(year > 2000) |>
  slice_sample(n=20)
```

## Parte 3 -  Genéros y resumen
